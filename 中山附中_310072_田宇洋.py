# -*- coding: utf-8 -*-
"""中山附中_310072_田宇洋

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19Xzv4RGHaeuM9_nwGjjUulwFkAzFsc3L
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv('觀光遊憩據點按縣市及遊憩據點交叉分析.csv')

months = df.columns[4:-1]

df[months] = df[months].apply(pd.to_numeric, errors='coerce')

df_grouped = df.groupby('縣市')[months].sum()

county_name_mapping = {
    '金門縣': 'Kinmen',
    '臺東縣': 'Taitung',
    '澎湖縣': 'Penghu',
    '連江縣': 'Lianjiang'
}
df_grouped.index = df_grouped.index.map(county_name_mapping)

df_long = pd.melt(df_grouped.reset_index(), id_vars=['縣市'], var_name='Month', value_name='Tourists')

df_long = df_long.dropna()

plt.figure(figsize=(10, 6))

county_order = ['Kinmen', 'Lianjiang', 'Penghu', 'Taitung']

sns.boxplot(data=df_long, x='縣市', y='Tourists', order=county_order)

max_values = df_long.groupby('縣市')['Tourists'].max()
median_values = df_long.groupby('縣市')['Tourists'].median()

for i, county in enumerate(county_order):
    max_val = max_values[county]
    median_val = median_values[county]


    plt.text(i, max_val, f'Max: {int(max_val)}', color='blue', ha='center', va='bottom')

    plt.text(i, median_val, f'Median: {int(median_val)}', color='black', ha='center', va='top')

plt.xticks(rotation=45)

plt.grid(True, which='both', axis='y', linestyle='--', linewidth=0.5, color='lightgrey')

plt.xlabel('Country')
plt.ylabel('Tourists')
plt.savefig('001.jpg', dpi=300, bbox_inches='tight')

import json
import pandas as pd

with open('HotelList.json', 'r', encoding='utf-8-sig') as file:
    data = json.load(file)

hotels_df = pd.json_normalize(data['Hotels'])

user_input_city = input("請輸入城市名稱（例如：臺東縣）：")
user_input_service = input("請輸入想要的服務資訊關鍵字（例如：自行車友善）：")
user_input_budget = int(input("請輸入預算（例如：2500）："))

matching_hotels = hotels_df[
    (hotels_df['PostalAddress.City'] == user_input_city) &
    (hotels_df['ServiceInfo'].str.contains(user_input_service, na=False)) &
    (hotels_df['LowestPrice'] <= user_input_budget) &
    (hotels_df['CeilingPrice'] >= user_input_budget)
]

if not matching_hotels.empty:
    print("在", user_input_city, "符合", user_input_service, "條件且預算在", user_input_budget, "以下的旅館有：")
    print(matching_hotels[['HotelName', 'LowestPrice', 'CeilingPrice', 'ServiceInfo']].to_string(index=False))
else:
    print("找不到符合條件的旅館。")