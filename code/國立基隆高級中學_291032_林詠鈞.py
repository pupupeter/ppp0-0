# -*- coding: utf-8 -*-
"""國立基隆高級中學_291032_林詠鈞

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1YOAcI4JdS8Qp1O-M1-1t03h4PCOb9ia5
"""

import seaborn as sns
import warnings
import pandas as pd
import matplotlib.pyplot as plt

# 忽略未來的警告
warnings.filterwarnings("ignore", category=FutureWarning)

# 讀取 CSV 檔案
df = pd.read_csv('觀光遊憩據點按縣市及遊憩據點交叉分析.csv')

# 縣市名稱對應表
county_mapping = {
    '金門縣': 'Kinmen',
    '連江縣': "Lianjiang",
    '澎湖縣': 'Penghu',
    '臺東縣': 'Taitung',
}

# 將縣市名稱轉換為英文
df['縣市'] = df['縣市'].map(county_mapping)

# 選取月份欄位並計算總和
month_columns = df.columns[4:-1]  # 從第五欄到倒數第二欄

# 處理月份欄位，將其轉換為數值類型
for column in month_columns:
    df[column] = pd.to_numeric(df[column].str.extract(r'(\d+)', expand=False), errors='coerce')

# 按縣市分組並計算總和、中位數和最大值
df['總和'] = df[month_columns].sum(axis=1)
county_stats = df.groupby('縣市')['總和'].agg(['median', 'max']).reset_index()

# 繪製箱型圖
plt.figure(figsize=(12, 6))
sns.boxplot(x='縣市', y='總和', data=df, order=list(county_mapping.values()), showfliers=False)

# 在箱型圖上標註中位數和最大值
for i, county in enumerate(county_stats['縣市']):
    plt.text(i, county_stats['median'][i], f'Median: {int(county_stats["median"][i])}',
             ha='center', va='bottom', fontsize=10, color='black')
    plt.text(i, county_stats['max'][i], f'Max: {int(county_stats["max"][i])}',
             ha='center', va='bottom', fontsize=10, color='blue')

# 設定標籤和格式
plt.xlabel('County', fontsize=14)
plt.ylabel('Tourists', fontsize=14)
plt.grid(axis='y')
plt.xticks(rotation=45)  # 旋轉 x 軸標籤
plt.tight_layout()
plt.savefig('001.jpg')
plt.clf()


import json

with open('HotelList.json', 'r', encoding='utf-8-sig') as file:
    data = json.load(file)

# 將 JSON 轉換為 DataFrame
hotels_df = pd.json_normalize(data['Hotels'])

# 用戶輸入的資訊
print('請輸入城市名稱（例如：臺東縣）\n請輸入想要的服務資訊關鍵字（例如：自行車友善）\n請輸入預算（例如：2500）')

# 詢問篩選條件
user_input_city = input()

# 是否有符合地點的旅館
matching_hotels_by_city = hotels_df[hotels_df['PostalAddress.City'] == user_input_city]
if matching_hotels_by_city.empty:
    print("未找到符合地點的旅館/民宿")
else:
    user_input_service1 = input()

    # 是否符合特殊需求的旅館，若跳過則使用原始結果
    matching_hotels_after_service = matching_hotels_by_city
    if user_input_service1.lower() != '無' and user_input_service1 != '':
        matching_hotels_after_service = matching_hotels_by_city[
            matching_hotels_by_city['ServiceInfo'].str.contains(user_input_service1,case=False, na=False)]
        from tabulate import tabulate
        if matching_hotels_after_service.empty:
            print("未找到符合地點和特殊需求的旅館/民宿")

    # 若前面篩選有結果，則繼續詢問預算
    if not matching_hotels_after_service.empty:
        user_input_budget = int(input())

        # 篩選符合預算的旅館
        matching_hotels_by_budget = matching_hotels_after_service[
            (matching_hotels_after_service['LowestPrice'] <= user_input_budget) &
            (matching_hotels_after_service['CeilingPrice'] >= user_input_budget)
        ]
        if matching_hotels_by_budget.empty:
            print("未找到符合預算的旅館/民宿")
        else:
            print("在", user_input_city, "的符合所有條件的旅館有：")
            print(matching_hotels_by_budget[['HotelName', 'LowestPrice', 'CeilingPrice', 'Description', 'PostalAddress.Town', 'PostalAddress.StreetAddress']].head(5).to_string(index=False))