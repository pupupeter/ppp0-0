# -*- coding: utf-8 -*-
"""國立基隆高中_291035_梁詠雋

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14Ctb2dvWEMweMdfFpMofI0sH22fQdttC
"""

import pandas as pd
import matplotlib.pyplot as plt
import json
import warnings

warnings.filterwarnings("ignore", category=FutureWarning)

# 讀取 CSV 檔案
tourist_data = pd.read_csv('觀光遊憩據點按縣市及遊憩據點交叉分析.csv')

# 將觀光人數分成不同月份加總
tourist_data['Month'] = pd.to_datetime(tourist_data['Date']).dt.month
monthly_tourists = tourist_data.groupby(['County', 'Month'])['Tourists'].sum().unstack()

# 生成箱型圖
plt.figure(figsize=(12, 6))
monthly_tourists.boxplot()
plt.xlabel('County', fontsize=14)
plt.ylabel('Tourists', fontsize=14)
plt.grid(axis='y')
plt.xticks(rotation=45)
plt.tight_layout()
plt.savefig('001.jpg')  # 輸出箱型圖
plt.clf()  # 清空圖形

# 添加標註 Max 和 Median
stats = monthly_tourists.describe().T[['50%', 'max']]
stats.columns = ['median', 'max']
for i, county in enumerate(stats.index):
    plt.text(i, stats['median'][county], f'Median: {int(stats["median"][county])}',
             ha='center', va='bottom', fontsize=10, color='black')
    plt.text(i, stats['max'][county], f'Max: {int(stats["max"][county])}',
             ha='center', va='bottom', fontsize=10, color='blue')

# 讀取 JSON 檔案
with open('HotelList.json', 'r', encoding='utf-8') as file:
    hotels_data = json.load(file)

# 將 JSON 轉為 DataFrame
hotels_df = pd.json_normalize(hotels_data)

# 用戶查詢
while True:
    user_input_city = input().strip()
    if hotels_df[hotels_df['PostalAddress.City'] == user_input_city].empty:
        print("未找到符合地點的旅館/民宿")
        break

    user_input_special_condition = input().strip()
    if user_input_special_condition.lower() != '無' and user_input_special_condition:
        matching_hotels = hotels_df[hotels_df['PostalAddress.City'] == user_input_city]
        matching_hotels = matching_hotels[matching_hotels['ServiceInfo'].str.contains(user_input_special_condition, case=False, na=False)]
    else:
        matching_hotels = hotels_df[hotels_df['PostalAddress.City'] == user_input_city]

    if matching_hotels.empty:
        print("未找到符合地點和特殊需求的旅館/民宿")
        break

    user_input_price = input().strip()
    if not user_input_price.isdigit() or not (1 <= int(user_input_price) <= 20000):
        print("未找到符合預算的旅館/民宿")
        break

    lowest_price = int(user_input_price)
    ceiling_price = 20000  # 可根據需求調整

    final_matching_hotels = matching_hotels[(matching_hotels['LowestPrice'] >= lowest_price) &
                                            (matching_hotels['CeilingPrice'] <= ceiling_price)]

    if final_matching_hotels.empty:
        print("未找到符合預算的旅館/民宿")
        break

    # 輸出前五個結果
    columns_to_display = ['HotelName', 'LowestPrice', 'CeilingPrice', 'Description',
                          'PostalAddress.Town', 'PostalAddress.StreetAddress']
    print("有符合需求的旅館，印出前5筆檢索到的內容，並使用 .to_string() 轉字串。")
    print(final_matching_hotels[columns_to_display].head(5).to_string(index=False))