{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1-Smfsb7TAwL1ViDzF5smPieaEDXhDyGR","timestamp":1728358071230}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"wPt8VZa-dF6h"},"outputs":[],"source":["import pandas as pd\n","df = pd.read_csv('觀光遊憩據點按縣市及遊憩據點交叉分析.csv')  # 讀取文件\n","#df.describe()  # 輸出基礎統計信息\n","df.head(5)"]},{"cell_type":"code","source":["# 刪除第0行，假設是包含列名錯誤行的地方\n","df_cleaned = df.drop(0)\n","\n","# 查看是否還有 NaN 值的行，刪除包含 NaN 的行（如果需要）\n","df_cleaned = df_cleaned.dropna(how='all')  # 刪除全是 NaN 的行\n","\n","# 如果有些列的 NaN 可以忽略，僅刪除特定列的 NaN（如 '縣市' 和 '遊憩據點'）\n","df_cleaned = df_cleaned.dropna(subset=['縣市', '遊憩據點'])\n","\n","# 查看清理後的數據\n","print(df_cleaned.head())\n","\n","df = df_cleaned\n","df.head(5)"],"metadata":{"id":"81yt9BZxfmDl"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## 時間序列分析：\n","\n","- 分析每個月的遊客數趨勢，使用 plot() 進行可視化展示。\n","- 例如，繪製特定景點在不同年份的遊客數變化趨勢。"],"metadata":{"id":"WMs0WJwleimQ"}},{"cell_type":"code","source":["# Colab 進行matplotlib繪圖時顯示繁體中文\n","# 下載台北思源黑體並命名taipei_sans_tc_beta.ttf，移至指定路徑\n","!wget -O TaipeiSansTCBeta-Regular.ttf https://drive.google.com/uc?id=1eGAsTN1HBpJAkeVM57_C7ccp7hbgSz3_&export=download\n","\n","import matplotlib\n","\n","# 改style要在改font之前\n","# plt.style.use('seaborn')\n","\n","matplotlib.font_manager.fontManager.addfont('TaipeiSansTCBeta-Regular.ttf')\n","matplotlib.rc('font', family='Taipei Sans TC Beta')"],"metadata":{"id":"xoobkDpsh139"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.set_index('遊憩據點', inplace=True)  # 設置景點名稱為索引\n","df.head(5)"],"metadata":{"id":"Ldd0O4D2ksgG"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","#df.T.plot()  # 畫出時間序列圖，按月展示各景點的遊客數\n","\n","# 確保數值列，從第5列開始是數值列\n","df_numeric = df.iloc[:10, 3:3+12]  # 選擇數值列\n","\n","# 將字符串轉換為數值，強制轉換錯誤項為 NaN\n","df_numeric = df_numeric.apply(pd.to_numeric, errors='coerce')\n","\n","# 處理缺失值，例如用 0 填充\n","df_numeric.fillna(0, inplace=True)\n","\n","# 將數據轉置並繪製圖表\n","df_numeric.T.plot()"],"metadata":{"id":"BOMqtlQqemf1"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## 按年匯總遊客數：\n","\n","- 匯總各景點每年的總遊客數，查看哪個年份的遊客最多。\n","- 可以通過篩選列名和 groupby() 方法按年份分組。"],"metadata":{"id":"B9ZDFogLlBAe"}},{"cell_type":"code","source":["# 將中華民國年份轉換為公歷年份，並使用 pd.to_datetime 進行日期解析\n","def convert_to_gregorian(date_str):\n","    #print(date_str)\n","    date_str = date_str.strip('月')\n","    year_str, month_str = date_str.split('年')\n","    roc_year = int(year_str)  # 中華民國年份\n","    gregorian_year = roc_year + 1911  # 轉換為公歷年\n","    #print(f'{gregorian_year}年{month_str}月')\n","    return f'{gregorian_year}/{month_str}'\n","\n","# 轉換列名中的中華民國年為公歷年\n","new_columns = [convert_to_gregorian(col) for col in df.columns[3:-1]]\n","\n","# 將轉換後的年份設置為列名\n","df.columns = list(df.columns[:3]) + new_columns + list(df.columns[-1:])\n","\n","# 查看結果\n","df.head(5)\n","\n"],"metadata":{"id":"MFP2NbFmlFYP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 假設 df 是你的數據\n","# 重置索引以便於使用 melt\n","df.reset_index(inplace=True)"],"metadata":{"id":"w3DU-pceuEvM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","\n","# 使用 melt 將 DataFrame 轉換為長表格形式\n","df_melted = df.melt(id_vars=[ '遊憩據點','縣市', 'Unnamed: 1',  'Unnamed: 3'],\n","                    var_name='日期', value_name='遊客數')\n","\n","# 提取年份，並將其轉換為整數\n","df_melted['年份'] = pd.to_datetime(df_melted['日期'], format='%Y/%m', errors='coerce').dt.year\n","\n","# 清理遊客數，去除空格，替換缺失值為0，並轉換為整數\n","df_melted['遊客數'] = df_melted['遊客數'].str.replace(' ', '').astype(float).fillna(0).astype(int)\n","\n","# 按年份和縣市匯總遊客數\n","yearly_summary = df_melted.groupby(['年份', '縣市'])['遊客數'].sum().reset_index()\n","\n","# 輸出年度遊客匯總\n","print(yearly_summary)\n","\n","\n"],"metadata":{"id":"Umh_8687qAkF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import seaborn as sns\n","import matplotlib.pyplot as plt\n","\n","# 設置圖形風格\n","sns.set(style='whitegrid')\n","\n","# 改style要在改font之前\n","matplotlib.font_manager.fontManager.addfont('TaipeiSansTCBeta-Regular.ttf')\n","matplotlib.rc('font', family='Taipei Sans TC Beta')\n","\n","# 創建圖形\n","plt.figure(figsize=(12, 6))\n","\n","# 使用 seaborn 的線性圖繪製每個縣市的年度遊客數\n","sns.lineplot(data=yearly_summary, x='年份', y='遊客數', hue='縣市', marker='o')\n","\n","# 添加標題和標籤\n","plt.title('年度遊客數匯總', fontsize=16)\n","plt.xlabel('年份', fontsize=14)\n","plt.ylabel('遊客數', fontsize=14)\n","plt.xticks(yearly_summary['年份'].unique())  # 確保每個年份都顯示\n","plt.legend(title='縣市', bbox_to_anchor=(1.05, 1), loc='upper left')\n","\n","# 顯示圖形\n","plt.tight_layout()\n","plt.show()"],"metadata":{"id":"mH_KggT1w04W"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 按年度匯總每年的遊客數\n","df_yearly_summary = df_melted.groupby('年份')['遊客數'].sum().reset_index()\n","\n","# 找出遊客數最多的年份\n","max_year = df_yearly_summary[df_yearly_summary['遊客數'] == df_yearly_summary['遊客數'].max()]\n","\n","# 打印匯總結果和最多遊客的年份\n","print(df_yearly_summary)\n","print(\"遊客最多的年份是：\")\n","print(max_year)"],"metadata":{"id":"V18Z9UmptPC0"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 創建圖形\n","plt.figure(figsize=(10, 6))\n","\n","# 繪製折線圖\n","plt.plot(df_yearly_summary['年份'], df_yearly_summary['遊客數'], marker='o', linestyle='-', color='b')\n","\n","# 添加標題和標籤\n","plt.title('年度遊客數匯總', fontsize=16)\n","plt.xlabel('年份', fontsize=14)\n","plt.ylabel('遊客數', fontsize=14)\n","\n","# 設置 x 軸為整數年份\n","plt.xticks(df_yearly_summary['年份'].astype(int))\n","\n","# 顯示網格\n","plt.grid(True)\n","\n","# 顯示圖形\n","plt.tight_layout()\n","plt.show()"],"metadata":{"id":"f2tFMSMEySvL"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## 區域匯總：\n","\n","- 匯總不同區域（如縣市）的遊客總數，查看哪個縣市的遊客最多。\n","- 使用 groupby() 函數按「縣市」進行分組統計。"],"metadata":{"id":"7hIQXzvNok5C"}},{"cell_type":"code","source":["# 將月份列轉換為數值並匯總\n","months = df.columns[3:-1]  # 獲取所有月份的列\n","df[months] = df[months].apply(pd.to_numeric, errors='coerce')  # 轉換為數值\n","\n","# 按縣市匯總遊客數\n","county_summary = df.groupby('縣市')[months].sum().reset_index()\n","\n","# 計算小計\n","county_summary['小計'] = county_summary[months].sum(axis=1)\n","\n","# 創建圖形\n","plt.figure(figsize=(10, 6))\n","\n","# 使用條形圖繪製每個縣市的遊客數總和\n","plt.bar(county_summary['縣市'], county_summary['小計'], color='skyblue')\n","\n","# 添加標題和標籤\n","plt.title('各縣市遊客數匯總', fontsize=16)\n","plt.xlabel('縣市', fontsize=14)\n","plt.ylabel('遊客數', fontsize=14)\n","\n","# 顯示網格\n","plt.grid(axis='y')\n","\n","# 顯示圖形\n","plt.xticks(rotation=45)  # 旋轉 x 軸標籤以避免重疊\n","plt.tight_layout()\n","plt.show()"],"metadata":{"id":"wrjvG8qhzlCc"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## 景點間的遊客差異分析：\n","\n","- 比較各個景點在特定時間段內的遊客差異，可以使用箱線圖或柱狀圖進行可視化。"],"metadata":{"id":"cOUf5DGMo711"}},{"cell_type":"code","source":["# 繪製箱型圖\n","plt.figure(figsize=(12, 6))\n","df.boxplot(column=list(df.columns[4:4+12]))\n","\n","# 添加標題和標籤\n","plt.title('各月份遊客數據的箱型圖', fontsize=16)\n","plt.xlabel('月份', fontsize=14)\n","plt.ylabel('遊客數', fontsize=14)\n","\n","# 顯示圖形\n","plt.xticks(rotation=45)  # 旋轉 x 軸標籤\n","plt.tight_layout()\n","plt.show()"],"metadata":{"id":"eI6n82cPo-XP"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# 可以住哪裡？"],"metadata":{"id":"0aeQR0s97pUV"}},{"cell_type":"code","source":["import json\n","\n","with open('HotelList.json', 'r', encoding='utf-8-sig') as file:\n","    data = json.load(file)\n","\n","# 將 JSON 轉換為 DataFrame\n","hotels_df = pd.json_normalize(data['Hotels'])\n","\n","# 用戶輸入的城市名稱\n","user_input_city = input(\"請輸入城市名稱（例如：臺東縣）：\")\n","\n","# 篩選並列出相應的旅館名稱\n","matching_hotels = hotels_df[hotels_df['PostalAddress.City'] == user_input_city]\n","\n","if not matching_hotels.empty:\n","    print(\"在\", user_input_city, \"的旅館有：\")\n","    print(matching_hotels['HotelName'].to_string(index=False))\n","else:\n","    print(\"未找到\", user_input_city, \"的旅館。\")\n"],"metadata":{"id":"FHsQb5FO7syH"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","\n","# 用戶輸入的服務資訊關鍵字\n","user_input_service = input(\"請輸入想要的服務資訊關鍵字（例如：自行車友善）：\")\n","matching_hotels_city = matching_hotels\n","# 進一步篩選包含服務資訊的旅館\n","matching_hotels = matching_hotels_city[\n","    matching_hotels_city['ServiceInfo'].str.contains(user_input_service, na=False)\n","]\n","\n","if not matching_hotels.empty:\n","    print(\"在\", user_input_city, \"的符合條件的旅館有：\")\n","    print(matching_hotels[['HotelName', 'ServiceInfo']].to_string(index=False))\n","else:\n","    print(\"未找到在\", user_input_city, \"符合服務資訊的旅館。\")"],"metadata":{"id":"9df27Fy89LgC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","# 用戶輸入的預算範圍\n","user_input_budget = int(input(\"請輸入預算（例如：2500）：\"))\n","\n","# 最後篩選符合預算範圍的旅館\n","final_matching_hotels = matching_hotels[\n","    (matching_hotels['LowestPrice'] <= user_input_budget) &\n","    (matching_hotels['CeilingPrice'] >= user_input_budget)\n","]\n","\n","if not final_matching_hotels.empty:\n","    print(\"在\", user_input_city, \"的符合 \",user_input_service,\" 條件的旅館有：\")\n","    print(final_matching_hotels[['HotelName','LowestPrice', 'CeilingPrice',  'ServiceInfo']].to_string(index=False))\n","else:\n","    print(\"未找到在\", user_input_city, \"符合服務資訊和預算的旅館。\")"],"metadata":{"id":"AtDSakCI-6O_"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## 有沒有可能再更進階一點呢？\n","- 這些資料即時自動從網站下載，而不用上傳呢？\n","- 與地圖搭配，直接把這些點顯示在地圖上呢？ (以上json原始資料有座標)\n","- 能否給他我的座標，直接篩選出離我最近的十間旅館呢？\n"],"metadata":{"id":"aliJkrEy2S77"}}]}