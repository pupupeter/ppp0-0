# -*- coding: utf-8 -*-
"""國立基隆高級中學_291036_郭柳霆

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wgFrOWbkyusHouAumH0DCQoGsr_qPjpQ
"""

import pandas as pd
import matplotlib.pyplot as plt
import json
import warnings

warnings.filterwarnings("ignore", category=FutureWarning)

# 讀取 CSV 檔案
df = pd.read_csv('觀光遊憩據點按縣市及遊憩據點交叉分析.csv')

# 假設檔案中包含 'County' 和 'Visitors' 欄位
monthly_visitors = df.groupby(['County', df['Date'].str.slice(0, 7)])['Visitors'].sum().unstack(fill_value=0)

# 箱型圖
plt.figure(figsize=(12, 6))
monthly_visitors.boxplot()
plt.xlabel('County', fontsize=14)
plt.ylabel('Tourists', fontsize=14)
plt.grid(axis='y')
plt.xticks(rotation=45)
plt.tight_layout()

# 計算最大值和中位數
stats = monthly_visitors.describe().loc[['50%', 'max']]
for i, county in enumerate(monthly_visitors.columns):
    plt.text(i, stats.loc['50%', county], f'Median: {int(stats.loc["50%", county])}',
             ha='center', va='bottom', fontsize=10, color='black')
    plt.text(i, stats.loc['max', county], f'Max: {int(stats.loc["max", county])}',
             ha='center', va='bottom', fontsize=10, color='blue')

plt.savefig('001.jpg')  # 儲存箱型圖
plt.close()

# 讀取 JSON 檔案
with open('HotelList.json', 'r', encoding='utf-8') as f:
    hotels_data = json.load(f)

hotels_df = pd.json_normalize(hotels_data)

# 輸入查詢
user_input_city = input()
matching_hotels = hotels_df[hotels_df['PostalAddress.City'] == user_input_city]

if matching_hotels.empty:
    print("未找到符合地點的旅館/民宿")
else:
    user_input_special_condition = input() or '無'

    if user_input_special_condition.lower() != '無':
        matching_hotels = matching_hotels[matching_hotels['ServiceInfo'].str.contains(user_input_special_condition, case=False, na=False)]

    if matching_hotels.empty:
        print("未找到符合地點和特殊需求的旅館/民宿")
    else:
        user_input_price = input()
        try:
            price_range = list(map(int, user_input_price.split()))
            lowest_price = price_range[0]
            ceiling_price = price_range[1]
            final_matching_hotels = matching_hotels[(matching_hotels['LowestPrice'] >= lowest_price) &
                                                    (matching_hotels['CeilingPrice'] <= ceiling_price)]
            if not final_matching_hotels.empty:
                columns_to_display = ['HotelName', 'LowestPrice', 'CeilingPrice',
                                      'Description', 'PostalAddress.Town',
                                      'PostalAddress.StreetAddress']
                print(final_matching_hotels[columns_to_display].head(5).to_string(index=False))
            else:
                print("未找到符合預算的旅館/民宿")
        except (ValueError, IndexError):
            print("未找到符合預算的旅館/民宿")