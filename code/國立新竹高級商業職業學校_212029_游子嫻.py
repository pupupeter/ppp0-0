# -*- coding: utf-8 -*-
"""「國立彰化女子中學_310299_許雅棋」的副本

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Lfe6PxsKAha4R-y1tv9V6rBkXsEutmBh
"""

# 刪除第0行，假設是包含列名錯誤行的地方
df_cleaned = df.drop(0)

# 查看是否還有 NaN 值的行，刪除包含 NaN 的行（如果需要）
df_cleaned = df_cleaned.dropna(how='all')  # 刪除全是 NaN 的行

# 如果有些列的 NaN 可以忽略，僅刪除特定列的 NaN（如 '縣市' 和 '遊憩據點'）
df_cleaned = df_cleaned.dropna(subset=['縣市', '遊憩據點'])

# 查看清理後的數據
print(df_cleaned.head())

df = df_cleaned
df.head(5)

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# 1. 讀取清理過的CSV檔案
df = pd.read_csv('觀光遊憩據點按縣市及遊憩據點交叉分析.csv')

# 2. 找到所有月份的列（假設月份從第4列開始，最後一列是總計，可以忽略）
months = df.columns[4:-1]  # 獲取所有月份的列

# 3. 將月份的數據轉換為數值型態，忽略無效數據
df[months] = df[months].apply(pd.to_numeric, errors='coerce')

# 4. 以縣市為分組，計算每個縣市不同月份的總觀光人數
df_grouped = df.groupby('縣市')[months].sum()

# 5. 定義縣市名稱映射
county_name_mapping = {
    '金門縣': 'Kinmen',
    '臺東縣': 'Taitung',
    '澎湖縣': 'Penghu',
    '連江縣': 'Lianjiang'
}

# 6. 轉換縣市名稱為映射後的英文名稱
df_grouped.index = df_grouped.index.map(county_name_mapping)

# 7. 將每個縣市的所有月份的觀光人數進行加總，並將數據轉換為長格式，以便於繪圖
df_long = pd.melt(df_grouped.reset_index(), id_vars=['縣市'], var_name='Month', value_name='Tourists')

# 8. 確保數據沒有NaN
df_long = df_long.dropna()

# 9. 繪製箱型圖
plt.figure(figsize=(10, 6))

# 自定義縣市順序
county_order = ['Kinmen', 'Lianjiang', 'Penghu', 'Taitung']

# 使用seaborn繪製箱型圖，x軸為縣市，y軸為Tourists，並設置縣市順序
sns.boxplot(data=df_long, x='縣市', y='Tourists', order=county_order)

# 10. 計算每個縣市的最大值和中位數
max_values = df_long.groupby('縣市')['Tourists'].max()
median_values = df_long.groupby('縣市')['Tourists'].median()

# 11. 在圖表上標註Max和Median
for i, county in enumerate(county_order):
    max_val = max_values[county]
    median_val = median_values[county]

    # 在箱型圖上直接標註最大值和中位數
    # Max 為藍色
    plt.text(i, max_val, f'Max: {int(max_val)}', color='blue', ha='center', va='bottom')
    # Median 為黑色
    plt.text(i, median_val, f'Median: {int(median_val)}', color='black', ha='center', va='top')

# 設置x軸標籤旋轉角度
plt.xticks(rotation=45)

# 添加水平網格線，設置為淺顏色
plt.grid(True, which='both', axis='y', linestyle='--', linewidth=0.5, color='lightgrey')

# 設置軸標籤（不設置標題）
plt.xlabel('Country')
plt.ylabel('Tourists')

# 顯示圖形
plt.show()