# -*- coding: utf-8 -*-
"""國立彰化女子高級中學_310024_黄湘豫

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XE9mURKxKYRn06NvFni2vfomeYVp-9oi
"""

import warnings
import pandas as pd
import matplotlib.pyplot as plt
import json
from tabulate import tabulate

# 忽略未來警告訊息
warnings.filterwarnings("ignore", category=FutureWarning)

# 讀取觀光遊憩據點的 CSV 檔案
def load_csv(file_path):
    try:
        return pd.read_csv(file_path)
    except FileNotFoundError:
        print(f"檔案 {file_path} 找不到！")
        return None

# 讀取旅館 JSON 檔案
def load_json(file_path):
    try:
        with open(file_path, 'r', encoding='utf-8-sig') as file:
            return json.load(file)
    except FileNotFoundError:
        print(f"檔案 {file_path} 找不到！")
        return None

# 生成箱型圖
def create_boxplot(df, county_mapping):
    plt.figure(figsize=(12, 6))
    box_data = [df[df['縣市'] == 縣市]['總和'] for 縣市 in county_mapping.values()]
    plt.boxplot(box_data, labels=list(county_mapping.values()), showfliers=False, patch_artist=True)

    for i, 縣市 in enumerate(county_mapping.values()):
        最大值 = 縣市總和.loc[縣市總和['縣市'] == 縣市, 'max'].values[0]
        中位數 = 縣市總和.loc[縣市總和['縣市'] == 縣市, 'median'].values[0]
        plt.text(i + 1, 最大值, f'Max: {int(最大值)}', ha='center', va='bottom', fontsize=10, color='blue')
        plt.text(i + 1, 中位數, f'Median: {int(中位數)}', ha='center', va='top', fontsize=10, color='black')

    plt.xlabel('County', fontsize=14)
    plt.ylabel('Tourists', fontsize=14)
    plt.grid(axis='y')
    plt.xticks(rotation=45)
    plt.tight_layout()
    plt.savefig('001.jpg')
    plt.close()

# 主函數
def main():
    # 讀取數據
    df = load_csv('觀光遊憩據點按縣市及遊憩據點交叉分析.csv')
    if df is None:
        return

    # 定義縣市名稱映射
    county_name_mapping = {
        '金門縣': 'Kinmen',
        '臺東縣': 'Taitung',
        '澎湖縣': 'Penghu',
        "連江縣": "Lianjiang"
    }

    # 將縣市中文名稱替換為英文名稱
    df['縣市'] = df['縣市'].map(county_name_mapping)

    # 選擇月份欄位並處理數值
    月份欄位 = df.columns[4:-1]
    for 欄位 in 月份欄位:
        df[欄位] = pd.to_numeric(df[欄位].str.extract(r'(\d+)', expand=False), errors='coerce')

    # 按縣市計算遊客數總和、中位數和最大值
    df['總和'] = df[月份欄位].sum(axis=1)
    縣市總和 = df.groupby('縣市')['總和'].agg(['median', 'max']).reset_index()

    # 創建圖表
    create_boxplot(df, county_name_mapping)

    # 讀取旅館資料
    hotel_data = load_json('HotelList.json')
    if hotel_data is None:
        return

    hotels_df = pd.json_normalize(hotel_data['Hotels'])

    # 旅館篩選邏輯
    user_input_city = input("請輸入城市名稱（例如：臺東縣）：")
    if user_input_city not in hotels_df['PostalAddress.City'].unique():
        print("無效的城市名稱，請重新嘗試。")
        return

    matching_hotels_by_city = hotels_df[hotels_df['PostalAddress.City'] == user_input_city]

    user_input_service = input("請輸入想要的服務資訊關鍵字（例如：自行車友善），或按 Enter 跳過：")
    if user_input_service and user_input_service.lower() != '無':
        matching_hotels_by_city = matching_hotels_by_city[
            matching_hotels_by_city['ServiceInfo'].str.contains(user_input_service, case=False, na=False)]
        if matching_hotels_by_city.empty:
            print("未找到符合條件的旅館。")
            return

    try:
        user_input_budget = int(input("請輸入1-20000整數範圍預算（例如：2500）："))
        if user_input_budget < 1 or user_input_budget > 20000:
            raise ValueError
    except ValueError:
        print("請輸入有效的整數範圍！")
        return

    matching_hotels_by_budget = matching_hotels_by_city[
        (matching_hotels_by_city['LowestPrice'] <= user_input_budget) &
        (matching_hotels_by_city['CeilingPrice'] >= user_input_budget)
    ]

    if matching_hotels_by_budget.empty:
        print("未找到符合預算的旅館。")
    else:
        print(f"在 {user_input_city} 符合條件的旅館有：")
        print(tabulate(matching_hotels_by_budget[['HotelName', 'LowestPrice', 'CeilingPrice', 'Description',
                                                  'PostalAddress.Town', 'PostalAddress.StreetAddress']],
                       headers='keys', tablefmt='psql', showindex=False))

# 執行主函數
if __name__ == "__main__":
    main()

